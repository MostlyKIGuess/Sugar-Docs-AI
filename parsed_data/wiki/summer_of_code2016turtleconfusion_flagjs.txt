Title: Summer of Code/2016/TurtleConfusion FlagJS
URL: https://wiki.sugarlabs.org/go/Summer_of_Code/2016/TurtleConfusion_FlagJS
--------------------------------------------------------------------------------
Contents
1
About Me
2
About your project
3
Timeline
4
You and the community
5
Miscellaneous
About Me
Name: Erick Sanhueza
Email: esanhueza12@alumnos.utalca.cl
Sugar Labs wiki username: esanhueza
IRC nickname on irc.freenode.net: erick_sanhueza
First language: Spanish but I also know english
Location: Chile, (from August 1 - August 14 in Germany)
Work hours: I can work between 12 to 20 hours UTC
Why do you want to work on an open-source project this summer?
I have never participated in a open-source project before, however I have used open-source programs, since I first know that they exist, now I use almost always use them. Currently my academic load is very light, so I decide to use my time wisely and introduce myself in the open-source community to start contributing.
About your project
What is the name of your project?
Turtle Confusion and FlagJS
Project description
This project consists in porting of "Confusion Turtle" and "Flag" to be used with Sugarizer. These activities extends the use of TurtleBlocks giving challenges to complete that develop the algorithmic thinking, they are useful to give students material of all levels, from basic to difficult and provides a tool of autonomous learning. I hope that there is enough time to add new features to improve the latter, like scoring the solution or make better help tips.   
At first, the technologies that will be used are the same as TurtleBlockJS, given that both activities will be essentially the same as TurtlebockJS.
Timeline
Working Days
Target
March 25 - April 1 (8 days)
Turtle Confusion:
Getting know the code of TurtleBlockJS
Experimenting with code
Community bonding
April 2 - April 10 (9 days)
Turtle Confusion:
Implement challenges loader
Implement code to check when the challenge is completed
Implement image export, region selection or complete screen
April 11 - April 13 (3 days)
Turtle Confusion:
Testing
Get feedback
Check for cross-browser compatibility
April 14 - April 20 (7 days)
Turtle Confusion:
Fix bugs
Improve activity according to feedback
Add visual enhancements
April 21 - April 25 (5 days)
Flag JS:
Implement challenges loader
Implement code to check when the challenge is completed
April 25 - April 28 (4 days)
FlagJS:
Testing
Get feedback
Check for cross-browser compatibility
April 29 - May 5 (7 days)
FlagJS:
Fix bugs
Improve activity according to feedback
Add visual enhancements
May 6 - May 25 (20 days)
FlagJS and Turtle Confusion:
Adding new features
May 26 - May 28 (3 days)
FlagJS and Turtle Confusion:
Testing
Get feedback
Check for cross-browser compatibility
May 29 - June 12 (15 days)
FlagJS and Turtle Confusion:
Adding new features
June 13 - June 20 (8 days)
FlagJS and Turtle Confusion:
Testing
Get feedback
Check for cross-browser compatibility
June 21 - June 28 (8 days)
Midterm Evaluation
July 1 - July 19 (20 days)
Both:
Solving remaining bugs, improving code and formalizing documentation
August 1 - August 14 (15 days)
Testing
August 15
Code submission
Convince us, in 5-15 sentences, that you will be able to successfully complete your project in the timeline you have described. This is usually where people describe their past experiences, credentials, prior projects, schoolwork, and that sort of thing, but be creative. Link to prior work or other resources as relevant.
I get my skillset of Web-development building the Back/Frontend of a project in my University to monitor the state of Wifi Service, this during a year and a half.
Front Development: HTML, Javascript, jQuery, D3.js and Bootstrap.
Backend: PHP and Symfony.
Database: MySQL, PostgreSQL, and basic notions of MongoDB.
I have used since three years Python (mostly for scripting) and Java (for more complex work) to solve my schoolwork. Also I have a scientific background in biology and chemistry (I study Bioinformatics). I know concepts about videogames development that I like to put in practice from time to time (never something serious).
You and the community
what will its impact be on the Sugar Labs community? (Me)
This project will add two activities into Sugarizer to contribute with the programming learning toolset, this together with the others new GSoC 2016 activities for code learning will transfer and improve the same capabilities that Sugar-Desktop version has to Sugarizer.
what will its impact be on the Sugar Labs community? (Walter Bender)
It provides enough structure to provide a pathway into construction for students and teachers who are not comfortable without a concrete starting place.
what will its impact be on the Sugar Labs community? (Sugar Labs member)
What will you do if you get stuck on your project and your mentor isn't around?
If I am unable to contact a mentor, I would try the development mail list first. 
If the problem is a technical issue and internet doesn't help, I could ask my college teachers for assitance (I have very easy access to them, and they also like open-source).
How do you propose you will be keeping the community informed of your progress and any problems or questions you might have over the course of the project?
I have learned (from a non presential work) that sending a e-mail regularly helps to maintain the communication, quite, so I would propose that problems, questions and big updates should be informed using this channel. To informe about the daily progress I think that a wiki page that exist just for the development period of the project could work. This page should show the timeline and the task for the current day/week an be updated where possible.
Miscellaneous
Here a proof of my Sugar-Web environment:
http://postimg.org/image/umrv84e7n/
Proof of Sugar development environment with the solicited modification:
http://postimg.org/image/bxo55flp7/