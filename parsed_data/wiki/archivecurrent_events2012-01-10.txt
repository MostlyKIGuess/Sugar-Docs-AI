Title: Archive/Current Events/2012-01-10
URL: https://wiki.sugarlabs.org/go/Archive/Current_Events/2012-01-10
--------------------------------------------------------------------------------
Sugar Digest
1. I was recently asked "Sorry if this should be common knowledge... Were you the key designer behind Sugar?"
Given the penchant for retrospective in the days before a new year, I thought I would provide a more long-winded answer than perhaps was being sought.
Much of the early development of Sugar took place in the MIT Media Lab. We began in the spring of 2006, in parallel with the work of the teams responsible for developing other aspects of the XO laptop’s software, including device drivers, power management, and security. One might ask how OLPC was able to create an entirely new learning platform from whole cloth, and do so with almost no investment in software engineering. The short answer is that they didn’t. OLPC solved the problem of how to develop the Sugar software with limited resources by attracting external resources—not creating them from scratch—while articulating clearly defined objectives. OLPC built upon decades of research into how to engineer software to promote learning and amplified OLPC’s staff resources by leveraging key partnerships within the Free Software movement.
Our principal partners in Sugar development were a small engineering team from Red Hat and Pentagram. The Red Hat team, under the leadership of Chris Blizzard, an experienced systems engineer, was tasked with leading the software engineering effort behind the development of the Sugar desktop. Lisa Strausfeld, a former MIT Media Lab student, led a team from Pentagram tasked with developing the interaction design and graphical identity of Sugar. In six months, this core group was able to produce a basic framework for Sugar upon which a community of pedagogists and software engineers could build learning activities. The team used an iterative-design process: rapid prototyping of ideas followed by critiques, followed by coding. We went through two to three cycles per week until we reached consensus on a basic framework. It was at this point, we were able to set higher-level goals enabling participation by a broader community of developers.
Like the XO development process, which was going on in parallel, the software development process required ongoing efforts to solve knotty and often unprecedented technical problems. To wrestle with these, the OLPC, Red Hat, and Pentagram teams met face to face on a bi-weekly basis. The broader development community, which over time was dispersed across five continents, was engaged in addressing the same problems, and met 24/7 in multilingual on-line chat forums. This was a global movement: the lead developer lived outside of Milan, Italy, a lead community contributor lived in Siberia, a testing team operated out of a coffee shop in Wellington, New Zealand. Significant contributions were made by a high-school student from Wunstorf Germany, an energy-management consultant living in Melbourne, Australia, and a student at the University of San Carlos in Brazil. The use of modern software-development tools, such as distributed source-code management and wikis enabled members of the development community to collaborate anywhere and at any time. We were also able to pilot Sugar in a wide range of contexts as well, getting hands-on experience and feedback in schools in Nigeria, Thailand, Cambodia, and Brazil.
Sugar was designed so that new uses emerging from the community could easily be incorporated. The journal was the brainchild of Ivan Krstić. Popular activities came from community volunteers such as Brian Silverman, a long-time collaborator of Papert who created Turtle Art, and Alan Kay and the Viewpoint team who created the Etoys learning environment. Others were commissioned from specific individuals, including a multimedia activity called Record written by Erik Blankinship and Bakhtiar Mikhak; the Sugar word processor, Write, which was based on Abiword and written by J.M. Maurer; the TamTam musical activity suite written by Jean Piché and his students at the University of Montreal; and some constructionist games from Harel's MamaMedia group which were “sugarized” by Morgan Collett and Carlos Neves.
Sugar was explicitly designed by OLPC to be augmented and amplified by its community and the end users: once these initial examples were published, the floodgates opened and activities began to come in unsolicited. While we had the advantage of a highly publicized project—OLPC was the subject of almost daily international news coverage—we did not necessarily have direct access to the highly skilled software-development community we needed in order to grow. We therefore did outreach in the forums where these people hung out. In Free Software, that is primarily in chat rooms and at conferences. Blizzard and the Red Hat team established an IRC channel for the project that soon attracted nearly 100 concurrent users. Gettys spend a great deal of his time attending Free Software conferences, focusing especially on conferences in regions where OLPC was targeting deployments, in order to solicit volunteers. We also used word of mouth, leveraging both the MIT alumni network and friends and colleagues from industry.
By the end of 2006, Sugar had a basic system running which included all of the basic activities: Write, Browse, Read, Paint, etc. By the end of 2009, Sugar had hundreds of activities contributed by thousands of developers around the world, and the ongoing engagement of a global group of developers, teachers and students.
Sugar Labs
Gary Martin has generated SOMs from the past few weeks of discussion on the IAEP mailing list:
2011 Dec 10th-16th (52 emails)
2011 Dec 3rd-9th (48 emails) [2]
Visit our
planet
for more updates about Sugar and Sugar deployments.