Title: 0.84/Performance
URL: https://wiki.sugarlabs.org/go/0.84/Performance
--------------------------------------------------------------------------------
Contents
1
Performance
1.1
People
1.2
Actions
1.3
Ideas
1.4
Done
Performance
People
Owner: Marco Pesenti Gritti
Peers
Riccardo Lucchese
Tomeu Vizoso
Actions
Improve activity startup time. We might be to rationalize dependencies a bit. Ensure that the startup animation is not slowing us down. Preload more modules inside rainbow. Import modules lazily where it make sense.
(marco)
We are using icons very extensively in the UI and we need a very efficient caching strategy. There are different possible approaches including caching on disk and in the video memory. It should not be hard to do better than we are currently doing, anyway. Drawing and animations performance should benefit a lot.
(benzea)
We are very often saving to the datastore unnecessarily and some times in concurrence with other heavy tasks (like switching activities). This is particularly bad on the XO given the compressed file system.
(marco)
Ideas
Composition would help activity switching and the frame animation a lot. We cannot turn it on for all the windows for memory reason but it might be reasonable to composite the current active activity and the frame. It has a cost anyway, so we should see if we can improve drawing efficiency instead.
The current implementation of thumbnailing requires to take several screenshots of the activity window synchronously on basically every window stack change. Short term solution is to compromise on the accuracy of the screenshots to take them less often and improve performance. Long term we should look into using composition or gtk off-screen rendering to be able to take a screenshot even when the window is hidden/idle.
Done
Improve startup time of the sugar shell and related services. This will involve dropping unnecessary dependencies and reducing the number of processes by merging the Journal and shell service inside the shell process.
(tomeu)
The control panel should startup instantaneously. To speed up the loading of each module we want to make the module self contained and register things on __init__.py
(erikos)
Switching between zoom views causes a lot of unnecessary redrawing and flickering. Should be reasonably easy to fix.
(marco)