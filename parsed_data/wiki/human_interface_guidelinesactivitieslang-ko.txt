Title: Human Interface Guidelines/Activities/lang-ko
URL: https://wiki.sugarlabs.org/go/Human_Interface_Guidelines/Activities/lang-ko
--------------------------------------------------------------------------------
번역근원
HIG-Activities
원문
english
|
español
|
한국어
+/-
차이
←
노트북 경험
활동
보안
→
Contents
1
활동
1.1
새로운 모델
1.2
소개
1.3
활동 기초
1.4
활동 시작하기
1.4.1
개인 활동
1.4.2
공유된 활동
1.5
활동에 참여
1.6
활동을 공유
1.7
활동 전환
1.8
활동 끝내기
1.9
활동을 재개
1.10
활동의 강건성
1.11
초대
1.11.1
명시적인 초대
1.11.2
암묵적 초대
1.11.3
초대를 받기
1.12
고지
1.12.1
대기중인 초대
1.12.2
스쳐가는 고지
1.13
활동 번들
1.13.1
번들 유형
1.13.2
번들 버전
1.13.3
활동 이름짓기
1.13.3.1
동사로서의 활동
1.13.3.2
의미있는 이름짓기
1.13.3.3
신뢰
1.13.4
활동 태그
1.13.5
활동 번들 얻기
1.13.5.1
암묵적 번들 공유
1.13.5.2
명시적 번들 공유
1.13.6
번들이 보관되는 곳은?
1.13.7
번들 지우기
활동
←
글로벌 검색
소개
활동 기초
→
새로운 모델
소개
우리는 단일 응용프로그램 및 다중 문서 컴퓨팅 환경과 OLPC의 풀 스크린 활동 인터페이스를 구별하는데, 후자는 각 오브젝트 (다큐먼트)가 그 자신의 인스턴스 내에서 구동합니다; 어느 한 활동의 여러 인스턴스들이 평행하게 돌아갈 수도 있습니다. 슈가 내의 활동 인터페이스는 오브젝트로서 파일을 다루는 방법을 제공합니다; 각 인스턴스는 여러 명이 참여하는 협동 하나의 그룹을 나타낼 수도 있으며, 글미 활동의 새로운 인스턴스를 만드는 것이 새로운 그림을 만드는 것이 됩니다. "열고" "저장"하는 액션은 저널 인터액션으로 됩니다; 사실, 우리는 "저장"을 "간직"으로 표현함으로써, 이러한 것을 강조합니다. 귀하가 간직하고 있는 그림을 "열기" 위해서는, 그저
재개
하면 됩니다.
We make a distinction between the typical single-application, multi-document model of computing and the Sugar full-screen activity interface, where each object (document) runs within its own instance—multiple instances of a given activity may run in parallel. Activity instances within Sugar provide a way to handle files as objects; each instance may represent a different group of collaborating individuals, and creating a new instance of the Draw activity implicitly creates a new drawing. "Open" and "Save" actions are relegated to a journal interaction; In fact, we strengthen this by replacing the notion of "Saving" with the more general notion of "Keeping" things. To "open" a drawing you've kept, you simply
resume
it.
←
글로벌 검색
소개
활동 기초
→
←
소개
활동 기초
활동 번들
→
활동 기초
활동 시작하기
활동은 프레임의 액션 섹션에 나타나며, 클릭으로 인스턴스가 시작되고, 링에 표시됩니다. 활동을 드래그하여 링 속에 옮기는 것도 인스턴스를 개시합니다.
Activities appear in the Actions section of the frame; starting an activity amounts to creating an active instance of it, represented in the activity ring. They can be started with a single click. An activity may also be directly manipulated; dragging an activity into the ring will also create a new active instance of it.
활동과 프레임 속의
활동 아이콘
은 구별됩니다. 시스템에 설치되어 액션 속에 나타나는 모든 활동은 가장자리가 흰색으로 속은 비었습니다. 인스턴스가 만들어지면 아이콘은 제 모양을 갖춥니다.
stroke and fill colors
Visual cues differentiate between instances of an activity and the
activity icon
in the frame. Specifically, any activity installed on the system and appearing in the Actions edge is drawn as a white outline stroke, with no fill. Upon instantiation the icon receives a fill; both
stroke and fill colors
match the XO colors of the child who created it.
개인 활동
새로 만들어진 활동 인스턴스는 그것들이 만들어진 뷰의 스코프를 상속합니다. 홈뷰에서 만들어진 활동은 개인 활동이지만,
명시적 초대
를 통해 언제든지 다른 사람들과 공유할 수 있습니다.
Newly created activity instances inherit the scope of the view in which they are created. This means that any activity started from the Home view begins as a private one by default. Children may later
share
private activities, opening them up to friends, classmates, group members, or anyone on the mesh through an
explicit invitation
.
공유된 활동
친구 그룹 뷰에서 시작된 활동은 자동적으로 해당 그룹에 속하는 친구들에게
암묵적 초대
를 보냅니다.
Since newly created activities inherit the scope of the view, any activity started directly from the Friends Group view will be open for her friends to participate in. This applies to any group the child belongs to as well.
Implicit invitations
are sent to all of the members of currently selected Group, alerting them of the activity. Likewise, any activity started from the (unfiltered) Mesh view will be open to everyone on the mesh, although invitations are not sent.
The views provide scope for instantiating activities. For finer granularity, the search (located in the Frame) provides an incremental filtering system that enables arbitrary selection of scope. As a query is entered into the search field, the view—Friends or Mesh—dynamically updates to reveal the matching selection. Matches remain in color, while those filtered out appear with a white outline. The filter terms apply parameters such as the names of activities, the types of activities, the names of individuals, and the interests of individuals. For instance, a child could search for anyone who likes games before starting a new game of Memory, or everyone in the same grade in a classroom setting, or a specific group of individuals by name. The results of the query become the scope for any new activity instance, and all XOs within that scope receive implicit invitations when an activity begins. These groupings may be saved as groups for future use.
공유 활동이 시작되면, 해당 활동을 시작한 어린이는 '활동 뷰'로 보여집니다.
Once a shared activity begins, the child who initiated the activity is taken into Activity view. Others who received invitations won't join the activity until they accept the invitation; white outline placeholders for their XO icons appear in the People section of the frame to indicate their potential arrival. If they accept an invitation, their XO fills with their colors; if they decline the outline disappears.
활동에 참여
검색 기능 등을 이용하여 다른 사람들이 시작한 활동에 참여할 수 있습니다.
Children will often find themselves joining activities already started by others. Activities can be discovered through search; searches may specify an activity name, an activity type, interests of individuals, and names of individuals. For instance, one could search for all activities that relate to music, or all activities that have participants who like camping, or all the active chat activities, or a few specific people by name. Once an appropriate activity is found, a single click on the activity icon will engage it.
활동을 공유
처음에는 개인적으로, 또는 소수 사람들이 시작한 활동이라도, 그 범주를 넓힐 수 있습니다.
Activities may begin as private, or restricted to a small group of individuals. There may be occasion to open up activities to a broader scope. For instance, a class may break into groups to work on a project within private group activities. At the end of the session, all groups may wish to open up their activities to the rest of the class for discussion and critique. Through selection in the activities contextual rollover, one may set the scope of children who may join an activity to one of Private, Mesh, or any specific Group to which she belongs, including her class, her friends, and potentially others.
반대로 그 범주를 좁힐 수도 있습니다.
A child may lock activities in a similar manner, tightening an activity's scope. Participants must leave on their own volition or at the request of others within the activity before locking it.
활동 전환
활동 링은 현재 노트북에서 동작중인 활동들을 보여줍니다. 홈뷰에서 링 속의 어느 한 활동을 클릭하면, 그 활동이 액티브 활동이 되며, 자동적으로 활동 뷰로 돌아갑니다. 단축키로도 열려있는 활동들 사이를 옮겨다닐 수 있습니다.
The activity ring indicates the activities currently running on the laptop. From the Home view, a single click on any activity in the ring will select it as the active activity, automatically transitioning back to its Activity view. Keyboard shortcuts enable quick transitions among open activities.
활동 끝내기
해당 메타포를 링밖으로 드래그 하거나, '종류' 액션을 선택함으로써 손쉽게 활동을 마칠 수 있습니다.
Ending an activity happens as easily as starting one. To complete the metaphor, dragging an activity out of the ring will end it. Selecting the End action in the activities contextual rollover will do likewise. Note that ending a shared activity—even one
you
started—does not necessarily "close" it. An activity instance remains active on the mesh as long as one or more individuals remain as participants.
활동을 재개
"열기" 명령어 대신에, 저널에 존재하는 것 (그림 등)을 쉽게 재개할 수 있습니다. 공유되었던 활동을 재개하면, 해당 활동에 참가했던 모든 이들에게 암묵적 초대장을 보냅니다.
In lieu of an "Open" command, one may simply resume an activity. If a drawing resides in the Journal, then resuming it will automatically restart the Draw activity, allowing modifications to that drawing. Due to the emphasis on collaborative activities, special consideration has to be given when resuming them; An activity fingerprint identifies a particular instance on the mesh. Resuming an activity implicitly invites all others who at one point participated in its creation that also remain within its currently specified scope. Additionally, cases may arise when an activity being resumed is already active on the mesh. In such cases, the child will automatically join the already active instance.
활동의 강건성
All activities designed for the laptop should place a strong emphasis on robustness. Two essential robustness considerations are input and network.
초대
암묵적 그리고 명시적 초대가 있습니다.
Invitations perform an essential functionality in a computing environment that so strongly emphasizes collaborative learning and creation. For this reason, two forms of invitations are present in the OS: explicit and implicit.
명시적인 초대
활동을 많은 사람들에게 공개하지 않고, 소수의 특정 개인들을 액티브 활동에 초대하는 경우에 사용됩니다.
Explicit invitations are used to invite specific individuals into already active activities. The ability to send explicit invitations to others serves particular use when in a private activity, be it a private group or a solitary one. In these cases, an explicit invitation can extend the group by including one or more specific individuals, without opening up the activity to a broader scope.
A child may initiate an explicit invitation either from within the activity itself or by identifying an individual or group in either the Groups or Neighborhood views.
암묵적 초대
사용자가 아니라 시스템이 보내는 초대로, 그룹 또는 이웃 뷰에서 활동을 시작하면, 해당 활동에 대한 초대가 그 그룹 또는 이웃에 속하는 모든 이들에게 전달되며, 이후 그 활동이 재개될 경우에도 그러합니다.
Implicit invitations do not require specific action on the part of the child. These invitations go to the appropriate individuals whenever actions suggest it, such as when starting an activity from the Groups or Neighborhood views. All individuals within the activity's scope receive implicit invitations to join. When an activity is resumed, those who participated previously receive an invitation.
초대를 받기
초대장은 초대자와 활동 정보를 포함하여, 프레임의
액션
섹션에 나타납니다.
Incoming invitations appear within the
Actions
section of the Frame, adjacent to the installed activities; they are rendered in the color of the inviter. Rollover reveals both the name of the inviter as well as the name and type of the activity. On extended rollover, the options to accept and decline appear. There is an optional message back to the inviter upon declining and invitation.
고지
고지는 초대와 비슷하며, 프레임의
액션
섹션에 나타납니다. 그러나, 고지는 사람이 아니라, 활동이나 시스템 만이 보내고, 좌측 하단의 큐를 형성합니다.
Notifications behave similarly to Invitations; they also appear in the
Actions
edge of the frame. However, unlike invitations, which are sent from people on the mesh, Notifications come from activities or directly from the system. As new notifications come in, they form a queue, with the most recent in the lower left-hand corner for quick access.
대기중인 초대
By default, notifications will remain in the frame until the child acknowledges them.
스쳐가는 고지
일정 시간 뒤에 자동으로 사라지거나, 주기적으로 나타나는 고지입니다.
Transient notifications alert a child when they arrive, but as they contain information that has a limited lifetime, they expire. Thus Activities may specify timeouts on notifications, after which they will automatically disappear.
←
소개
활동 기초
활동 번들
→
←
활동 기초
활동 번들
보안
→
활동 번들
Referencia API
활동 번들 기술적 사양
API Reference
Activity Bundle technical specifications
활동은 번들 형태로 존재합니다. 이 번들은 어느 한 활동을 구성하는 연관 파일들의 그룹입니다; 소스코드, 이미지, 문서 등. 활동의 배포와 설치는 해당 활동 번들을 노트북에 전송하는 것으로 완료됩니다. 번들 내에 보관된 속성들은 버전과 제작자 등의 정보입니다.
Activities will exist in the form of bundles. These bundles will manifest as groups of related files—source code, images, documentation, etc—that compose a given activity. As self-contained modules, the distribution and installation of an activity distills to a simple transfer of the activity bundle to a laptop. Properties stored within a bundle provide information about its version and its creator(s).
번들 유형
OLPC는 laptop.org 또는 국가의 공식 단체가 테스트하고 검증한, 서명된 "공식" 번들 타입을 지원합니다.
OLPC will support a signed "official" bundle type. Signed bundles have been tested and verified by an authority such as laptop.org or any other organization through which children obtain bundles in some official capacity, such as a country's official repository. This system may support a trickle-up metaphor through which locally signed bundles propagate upward to higher authorities, allowing wider distribution of newly created activities and content to other regions and countries.
개인용 번들은 공식적 검증을 거치지 않고, 제작자와 수정자들의 워터마크가 첨부된 것으로, 어느 한 노트북 공동체에 속한 개인이 만들거나 수정한 것입니다.
Personal bundles, on the other hand, have been created or modified by an individual among the laptop community. A personal bundle isn't signed or verified by an official source; instead, it is signed or watermarked with the identity of the individual who modified it. This watermark remains attached to the bundle throughout its lifetime. As others modify or change it, their own watermark should be appended to the bundle. This gives a personal bundle some sense of origin and a means through which it is possible to give credit or responsibility.
번들 버전
번들은 자동적으로 해당 네트워크 내의 최신 버전으로 업그레이드 됩니다.
Bundles always automatically update to the latest officially signed version present within the laptop's network. If a child's friend has a more recent version of a signed bundle, Sugar will download that newer version and update the laptop automatically. This requires bundles to communicate a unique bundle identifier and version, as well as their signature if they have one.
활동 이름짓기
OLPC는 창조를 통한 표현을 고무하는 플랫폼 제공을 지향합니다. 이에 따라, (응용프로그램이 아니라) 활동은 오브젝트가 만들어지는 주요 도구를 제공합니다. 가능하면, 활동의 이름은 "귀하가 하는 일"로서 그 기능을 강조하기 위해,  설명적인 동사나 동사 유형으로 지어야 합니다.
OLPC aims to provide a platform which encourages expression through creation. In support of this idea, activities — not applications — provide the main tools through which objects are created. Whenever possible, activities should be named with descriptive verbs, or suitable pseudo-verbs, in order to emphasize their function as
things you do.
동사로서의 활동
활동
은
동사입니다. <내 친구들과 <활동>"은 말이 됩니다.
Activities
are
verbs. As such, the phrase "<activity> with my friends" should make sense. For instance "draw with my friends," "browse with my friends", "chat with my friends" and "edit text with my friends" all make much more sense than "text editor with my friends." Similarly, "Tam-tam with my friends" reads as an action, even though you may have never heard "tam-tam" before. Treating the activity as an action (verb) and not as a thing (noun) maintains the interaction model that the laptop tries to embody.
의미있는 이름짓기
플랫폼이 지원할 활동의 유형이나 종류를 제한하지는 않습니다.
Of course, we don't mean to impose arbitrary limits on the types and number of activities that the platform has the potential to support. Just because there is a "Draw" activity doesn't mean that one must either find a synonym or come up with a different activity. (However, note that the former can be a very reasonable approach, as a synonym might actually have subtly different connotations which better support the concept of the activity. For instance, drawing and painting typically imply two very different types of media, dry and wet respectively. Much is gained when these types of differences are reflected in the nature of the activity, and are not simply arbitrary.) In modern language,
verbification
has become common practice in speech. Many words function as both nouns and as verbs, indicating the action of creation and the resulting product of that action; additionally, many nouns can also function as verbs. For instance, you've probably "Googled" something in the past few days. Many nouns, not just proper ones, can be used in a similar manner.
"손가락 페인트"와 같은 복합어도 괜찮습니다. 그러나, "슈퍼" "울트라" "캡숑" "짱" 등 의미없는 강조어 사용은 자제해 주십시오.
Additionally, while straightforward names can simplify the interface and provide a means of understanding an activity before entering it, compound names may also be used. Providing a modifier, such as an adjective, can personalize the activity and provide that extra bit of information which differentiates it from similar ones. For instance: "Finger Paint." However, please refrain from resorting to simple one-upsmanship in the form of "Super Sketch" or "Ultra Paint," especially if another activity already uses the modified base. Such names only serve to indicate superiority, and don't provide any useful feedback about the particular activity which makes it unique or useful. Providing a meaningful name goes a long way to making the activity intuitive and enticing to the children using it.
신뢰
귀하의 이름이나 귀하가 속한 회사 이름을 넣는 일은 패해 주십시오.
Finally, please avoid integrating the name of yourself or of your company into the name of your activity. As an open-source initiative we fully believe in giving due credit, but the name of your activity doesn't provide the appropriate place for accreditation.
활동 태그
아직 지원되지는 않지만, 활동의
.info
파일은 일련의 관련 태그들을 요구합니다.이 태그들은 특정 활동에 대한 부가 정보를 제공하며, 검색 기능을 강화합니다.
Though not yet supported, the .info file for an activity will require a list of associated tags. These tags provide additional information about the context of a specific activity, enabling powerful searching on the Mesh for generalizations or categories of activities. For instance, searching for "game" should return the "Memory," "Chess," and "Tic-Tac-Toe" activities. Likewise, searching for "drawing" should return any activities that relate to drawing, painting, sketching, etc.
활동 번들 얻기
공식 서명된 번들은 메쉬 이웃들 간에 자유로이 배포되어야 합니다.
Officially signed bundles should spread freely across the mesh Neighborhood; their information and the bundles themselves should be readily available to anyone within communication range. Installation and updates should occur implicitly.
While personal bundles are slightly more restricted, current thinking would limit distribution of personal bundles amongst a child's friends only. This should help limit the destructive power of a malicious bundle from spreading across the Neighborhood, yet still allow people to open up their bundle source code, improve it and share it explicitly.
암묵적 번들 공유
암묵적 번들 공유는 네트워크가 허용할 때 아이의 노트북에 설치된 서명된 번들을 자동 업데이트합니다. 아이가 메쉬 이웃에서 재미난 활동을 발견하고, 참여하게 되면, 자동적으로 해당 활동이 다운로드 및 설치됩니다. 또한, 해당 모임에 참여하기 전에 설치된 옛 버전은 새 버전으로 교체됩니다. 물론, 해당 활동이 시작되기 전에 다운로드 시간이 필요하며, 시작까지의 남은 시간이 시각적으로 표시됩니다.
Implicit bundle sharing will automatically update signed bundles on a child's machine when the network allows. If a child finds an interesting activity running on the mesh Neighborhood, she will implicitly download and install the activity on her own machine when she joins that activity. Additionally, this provides a means of obtaining completely new bundles, since she doesn't necessarily need to have an older version of the bundle installed prior to joining. Of course, since there will likely be some download time before the activity can begin, a visual indication of the progress will appear during launch.
In cases where a child joins a group running an older version of an activity she has a newer version of, the same will happen. Her laptop will silently download the older version of the activity so that when she joins, her active instance is service and communication level compatible. However, in such instances the old version will not overwrite the newer version, and will instead remain a transparent detail for compatibility reasons. The newer will remain present on her machine, so that future activities which she initiates begin with the new version, ultimately encouraging the spread of newer bundles.
This article is a
stub
. You can help Sugar Labs by
expanding it
.
We might need some kind of warning when joining an activity on the mesh whose bundle is not signed...
명시적 번들 공유
일부 개인용 번들은 명시적 공유가 요구되는데, 많은 아이들이 다양한 새롭거나 변경된 소프트웨어 번들 버전들을 편집하고 재배포하기 때문입니다; 그러한 수정의 자동 배토는 안전하지도 효율적이지도 않습니다.
In the case of personal bundles, explicit sharing will be required. This results from the fact that many children may ultimately edit and redistribute new and altered bundle versions of a variety of software; automatic distribution of such modifications is neither secure nor efficient.
In these cases, activities may be posted to private Bulletin Boards, or distributed directly to a child's friends through the drag and drop metaphors used elsewhere in the interface.
번들이 보관되는 곳은?
저널은 해당 노트북에 있는 모든 번들의 기록을 유지합니다.
The Journal keeps a record of all bundles on the laptop. Installing a bundle creates an entry that indicates who the child downloaded the bundle from and its version. If she installed the bundle through the joining of an activity, the activity entry in the journal will reference the newly updated bundle. Of course, once stored within the journal, the Bundle will be available for activation within the Actions section of the Frame.
번들 지우기
저널 상의 다른 아이템들과 마찬가지로 번들은 언제든지 시스템에서 지울 수 있습니다.
The journal entry for an activity bundle also allows for its removal; it is deleted in the same way one would remove any other item from the Journal.
←
활동 기초
활동 번들
보안
→
←
노트북 경험
활동
보안
→